(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    135338,       2791]
NotebookOptionsPosition[    134125,       2749]
NotebookOutlinePosition[    134499,       2765]
CellTagsIndexPosition[    134456,       2762]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data", " ", "=", " ", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{"\"\<particles.out\>\"", ",", "\"\<Table\>\""}], "]"}], ",", 
      "8"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"When", " ", "we", " ", "read", " ", "the", " ", "table"}], ",", 
    " ", 
    RowBox[{
    "we", " ", "convert", " ", "each", " ", "entry", " ", "to", " ", 
     "string"}], ",", " ", 
    RowBox[{"remove", " ", "the", " ", "commas"}], ",", " ", 
    RowBox[{"and", " ", "then", " ", "convert", " ", "back", " ", "to", " ", 
     RowBox[{"expression", ".", " ", "The"}], " ", "level", " ", 
     RowBox[{"{", "2", "}"}], " ", "indicates", " ", "that", " ", "we", " ", 
     "use", " ", "this", " ", "function", " ", "on", " ", "the", " ", 
     "second", " ", 
     RowBox[{"level", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToString", "[", "#", "]"}], ",", 
         RowBox[{"\"\<,\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], "]"}], "&"}], 
     ",", "data", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputs", " ", "=", 
   RowBox[{"Flatten", "[", " ", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<inputs.in\>\"", ",", " ", "\"\<Table\>\""}], "]"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"partRadii", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Import", "[", 
      RowBox[{"\"\<part_radii.out\>\"", ",", " ", "\"\<Table\>\""}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numPart", " ", "=", " ", 
   RowBox[{"inputs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boxSize", " ", "=", 
   RowBox[{"inputs", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dt", "=", 
   RowBox[{"inputs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shearRate", "=", 
   RowBox[{"inputs", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"endTime", "=", 
    RowBox[{
     RowBox[{"data", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Wrap", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{"x", "+", 
       FractionBox["boxSize", "2"]}], ",", "boxSize"}], "]"}], "-", 
    FractionBox["boxSize", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shearMove", "=", 
   RowBox[{"Wrap", "[", 
    RowBox[{"shearRate", "*", 
     FractionBox["boxSize", "2"], "*", "dt", "*", "endTime"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<The top row is shifted by \>\"", ",", " ", "shearMove"}], 
    "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Used", " ", "to", " ", "tile", " ", "the", " ", "duplicate", " ", 
    RowBox[{"spheres", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"duplicateDir", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Grab", " ", "the", " ", "y"}], "-", 
    RowBox[{
    "coord", " ", "to", " ", "determine", " ", "how", " ", "much", " ", "x", 
     " ", "to", " ", "shift", " ", "for", " ", "the", " ", 
     RowBox[{"shear", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"shiftDir", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "&"}], ",", "duplicateDir"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Create", " ", "a", " ", "table", " ", "with", " ", "the", " ", 
    "\"\<Sphere\>\"", " ", "graphics", " ", "objects"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Centre", " ", "positions", " ", "are", " ", "stored", " ", "from", " ", 
    "the", " ", "2", "nd", " ", "row", " ", "onwards"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"graphicsset", " ", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sphere", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"data", "\[LeftDoubleBracket]", 
          RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"3", ";;", "5"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "partRadii", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
        "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numPart"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Sphere", " ", "positions", " ", "for", " ", "the", " ", "tiled", " ", 
    RowBox[{"spheres", ".", " ", "Each"}], " ", "\"\<group\>\"", " ", "of", 
    " ", "tiled", " ", "sphere", " ", "has", " ", "a", " ", "different", " ", 
    RowBox[{"colour", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dupe", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Hue", "[", 
         FractionBox["j", 
          RowBox[{"Length", "[", "duplicateDir", "]"}]], "]"}], ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"data", "\[LeftDoubleBracket]", 
             RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"3", ";;", "5"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{"boxSize", "*", 
            RowBox[{
            "duplicateDir", "\[LeftDoubleBracket]", "j", 
             "\[RightDoubleBracket]"}]}], "+", 
           RowBox[{"shearMove", "*", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}], "*", 
            RowBox[{
            "shiftDir", "\[LeftDoubleBracket]", "j", 
             "\[RightDoubleBracket]"}]}]}], ",", 
          RowBox[{
          "partRadii", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numPart"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "duplicateDir", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Combine", " ", "the", " ", "original", " ", "spheres", " ", "with", " ", 
    "the", " ", 
    RowBox[{"tiles", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"graphicsset", "=", 
    RowBox[{"Union", "[", 
     RowBox[{"graphicsset", ",", "dupe"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "the", " ", "dimensions", " ", "of", " ", "the", " ", 
    "enclosing", " ", "box"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xmin", ",", "ymin", ",", "zmin"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "boxSize"}], "/", "2"}], ",", 
     RowBox[{
      RowBox[{"-", "boxSize"}], "/", "2"}], ",", 
     RowBox[{
      RowBox[{"-", "boxSize"}], "/", "2"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xmax", ",", "ymax", ",", "zmax"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"boxSize", "/", "2"}], ",", 
     RowBox[{"boxSize", "/", "2"}], ",", 
     RowBox[{"boxSize", "/", "2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"volume", " ", "=", " ", 
   SuperscriptBox["boxSize", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"occupied", " ", "=", 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       FractionBox["4", "3"], "*", "\[Pi]", "*", 
       SuperscriptBox[
        RowBox[{
        "partRadii", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        "3"]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numPart"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"packfraction", " ", "=", " ", 
   RowBox[{"N", "[", 
    RowBox[{"occupied", "/", "volume"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<We have \>\"", ",", " ", "numPart", ",", "\"\< particles.\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Their radii are \>\"", ",", "partRadii"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Occupied volume is \>\"", ",", " ", "occupied", ",", " ", 
    "\"\< out of \>\"", ",", " ", "volume", ",", " ", 
    "\"\<, the packing fraction is \>\"", ",", "packfraction"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"For", " ", "3", "D", " ", 
    RowBox[{"packing", "!"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"graphicsset", ",", " ", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "2"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Packing.png\>\"", ",", "p"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6366147630039*^9, 3.6366147658771176`*^9}, {
   3.6366155878245006`*^9, 3.636615597289174*^9}, {3.636615830267187*^9, 
   3.6366158331223974`*^9}, {3.636616272195177*^9, 3.63661627976368*^9}, {
   3.6366882739916697`*^9, 3.636688312884222*^9}, {3.6366883522456455`*^9, 
   3.636688361402244*^9}, {3.6366883962634335`*^9, 3.6366884124672513`*^9}, {
   3.636688514267825*^9, 3.6366885928967185`*^9}, {3.636688828575923*^9, 
   3.6366888343263283`*^9}, {3.6366895328746614`*^9, 
   3.6366895481254125`*^9}, {3.6366898055755377`*^9, 
   3.6366898285923157`*^9}, {3.636689962364496*^9, 3.636689998319508*^9}, 
   3.636690574457945*^9, {3.636690682093673*^9, 3.636690767361043*^9}, {
   3.636690802448538*^9, 3.636690806255895*^9}, {3.6366924656694784`*^9, 
   3.6366924709239545`*^9}, 3.6366950453416033`*^9, {3.6367205986859818`*^9, 
   3.636720598857848*^9}, {3.6367211067813168`*^9, 3.6367211303224716`*^9}, 
   3.636721163338255*^9, {3.677561833794881*^9, 3.6775620158384404`*^9}, {
   3.6775620519057627`*^9, 3.6775621138201604`*^9}, {3.6775621463871717`*^9, 
   3.6775622503553553`*^9}, {3.677562286894452*^9, 3.6775623178567057`*^9}, {
   3.6775623503785353`*^9, 3.677562386145131*^9}, {3.6775624177070956`*^9, 
   3.677562418394559*^9}, {3.6775624580646987`*^9, 3.677562482241126*^9}, {
   3.6775625737560253`*^9, 3.6775625954238267`*^9}, {3.679015541394518*^9, 
   3.679015740864745*^9}, {3.679015805737253*^9, 3.679015918893671*^9}, {
   3.6790223394253817`*^9, 3.679022396152639*^9}, {3.679023774411999*^9, 
   3.679023792823221*^9}, {3.679026160576994*^9, 3.679026161554843*^9}, {
   3.6790266070228558`*^9, 3.679026719881939*^9}, {3.6790946598192205`*^9, 
   3.679094686203888*^9}, {3.67909513959612*^9, 3.6790952481307898`*^9}, {
   3.6790952823750086`*^9, 3.679095463477968*^9}, {3.6790955004041867`*^9, 
   3.6790955016698756`*^9}, {3.679096799062007*^9, 3.6790968637684402`*^9}, {
   3.6790988660252113`*^9, 3.679099011609833*^9}, {3.6790991775078297`*^9, 
   3.679099334454132*^9}, {3.6790993878733816`*^9, 3.6790994323277516`*^9}, {
   3.679099492649196*^9, 3.679099499928635*^9}, {3.679099580991518*^9, 
   3.679099615245574*^9}, {3.679100183930089*^9, 3.6791001861178923`*^9}, {
   3.6791013353749776`*^9, 3.6791013461921*^9}, {3.6791059668516045`*^9, 
   3.6791059793687086`*^9}, 3.6792704677252693`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The top row is shifted by \"\>", "\[InvisibleSpace]", "0.`"}],
  SequenceForm["The top row is shifted by ", 0.],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6790994138104835`*^9, 3.6790994343392677`*^9}, {
   3.6790994848185406`*^9, 3.6790995015633574`*^9}, {3.679099600443761*^9, 
   3.6790996185253696`*^9}, 3.6791001765473204`*^9, {3.679100319205024*^9, 
   3.6791003404464226`*^9}, 3.679100802205923*^9, 3.679101315033972*^9, 
   3.6791013465827417`*^9, {3.6791014093498583`*^9, 3.6791015158905816`*^9}, {
   3.679101552223012*^9, 3.679101581459157*^9}, {3.6791017155519285`*^9, 
   3.679101773269849*^9}, 3.679105812815553*^9, 3.6791061280282125`*^9, 
   3.6791061717845163`*^9, 3.679106247505835*^9, {3.6791071606622505`*^9, 
   3.679107179765776*^9}, 3.679107369132393*^9, {3.679107590210926*^9, 
   3.679107593523327*^9}, {3.679107623942147*^9, 3.67910765337145*^9}, {
   3.679107687844807*^9, 3.6791077350919166`*^9}, 3.6792704688119364`*^9, 
   3.6792733296850386`*^9, 3.6792750839334893`*^9, 3.6792763905598755`*^9, 
   3.6792850456366377`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"We have \"\>", "\[InvisibleSpace]", "15", 
   "\[InvisibleSpace]", "\<\" particles.\"\>"}],
  SequenceForm["We have ", 15, " particles."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6790994138104835`*^9, 3.6790994343392677`*^9}, {
   3.6790994848185406`*^9, 3.6790995015633574`*^9}, {3.679099600443761*^9, 
   3.6790996185253696`*^9}, 3.6791001765473204`*^9, {3.679100319205024*^9, 
   3.6791003404464226`*^9}, 3.679100802205923*^9, 3.679101315033972*^9, 
   3.6791013465827417`*^9, {3.6791014093498583`*^9, 3.6791015158905816`*^9}, {
   3.679101552223012*^9, 3.679101581459157*^9}, {3.6791017155519285`*^9, 
   3.679101773269849*^9}, 3.679105812815553*^9, 3.6791061280282125`*^9, 
   3.6791061717845163`*^9, 3.679106247505835*^9, {3.6791071606622505`*^9, 
   3.679107179765776*^9}, 3.679107369132393*^9, {3.679107590210926*^9, 
   3.679107593523327*^9}, {3.679107623942147*^9, 3.67910765337145*^9}, {
   3.679107687844807*^9, 3.6791077350919166`*^9}, 3.6792704688119364`*^9, 
   3.6792733296850386`*^9, 3.6792750839334893`*^9, 3.6792763905598755`*^9, 
   3.679285045667889*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Their radii are \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "2.5`", ",", "2.5`", ",", "2.5`", ",", "2.5`", ",", "2.5`", ",", "2.5`", 
     ",", "2.5`", ",", "2.5`", ",", "2.5`", ",", "2.5`", ",", "2.5`", ",", 
     "2.5`", ",", "2.5`", ",", "2.5`", ",", "2.5`"}], "}"}]}],
  SequenceForm[
  "Their radii are ", {2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 
   2.5, 2.5, 2.5, 2.5}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6790994138104835`*^9, 3.6790994343392677`*^9}, {
   3.6790994848185406`*^9, 3.6790995015633574`*^9}, {3.679099600443761*^9, 
   3.6790996185253696`*^9}, 3.6791001765473204`*^9, {3.679100319205024*^9, 
   3.6791003404464226`*^9}, 3.679100802205923*^9, 3.679101315033972*^9, 
   3.6791013465827417`*^9, {3.6791014093498583`*^9, 3.6791015158905816`*^9}, {
   3.679101552223012*^9, 3.679101581459157*^9}, {3.6791017155519285`*^9, 
   3.679101773269849*^9}, 3.679105812815553*^9, 3.6791061280282125`*^9, 
   3.6791061717845163`*^9, 3.679106247505835*^9, {3.6791071606622505`*^9, 
   3.679107179765776*^9}, 3.679107369132393*^9, {3.679107590210926*^9, 
   3.679107593523327*^9}, {3.679107623942147*^9, 3.67910765337145*^9}, {
   3.679107687844807*^9, 3.6791077350919166`*^9}, 3.6792704688119364`*^9, 
   3.6792733296850386`*^9, 3.6792750839334893`*^9, 3.6792763905598755`*^9, 
   3.679285045667889*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Occupied volume is \"\>", "\[InvisibleSpace]", 
   "981.7477042468103`", "\[InvisibleSpace]", "\<\" out of \"\>", 
   "\[InvisibleSpace]", "3375", 
   "\[InvisibleSpace]", "\<\", the packing fraction is \"\>", 
   "\[InvisibleSpace]", "0.29088820866572157`"}],
  SequenceForm[
  "Occupied volume is ", 981.7477042468103, " out of ", 3375, 
   ", the packing fraction is ", 0.29088820866572157`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6790994138104835`*^9, 3.6790994343392677`*^9}, {
   3.6790994848185406`*^9, 3.6790995015633574`*^9}, {3.679099600443761*^9, 
   3.6790996185253696`*^9}, 3.6791001765473204`*^9, {3.679100319205024*^9, 
   3.6791003404464226`*^9}, 3.679100802205923*^9, 3.679101315033972*^9, 
   3.6791013465827417`*^9, {3.6791014093498583`*^9, 3.6791015158905816`*^9}, {
   3.679101552223012*^9, 3.679101581459157*^9}, {3.6791017155519285`*^9, 
   3.679101773269849*^9}, 3.679105812815553*^9, 3.6791061280282125`*^9, 
   3.6791061717845163`*^9, 3.679106247505835*^9, {3.6791071606622505`*^9, 
   3.679107179765776*^9}, 3.679107369132393*^9, {3.679107590210926*^9, 
   3.679107593523327*^9}, {3.679107623942147*^9, 3.67910765337145*^9}, {
   3.679107687844807*^9, 3.6791077350919166`*^9}, 3.6792704688119364`*^9, 
   3.6792733296850386`*^9, 3.6792750839334893`*^9, 3.6792763905598755`*^9, 
   3.679285045667889*^9}]
}, Open  ]],

Cell[BoxData[
 Graphics3DBox[{{
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{-6.126381, 16.950415, -6.204545}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{-6.126381, -13.049585, -6.204545}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{8.873619, 1.950415, -6.204545}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-21.126381000000002`, 1.950415, -6.204545}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{8.873619, 16.950415, -6.204545}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{8.873619, -13.049585, -6.204545}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-21.126381000000002`, 16.950415, -6.204545}, 2.5]}, 
    {Hue[1], SphereBox[{-21.126381000000002`, -13.049585, -6.204545}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{-5.079535, 21.143061, 6.217813}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{-5.079535, -8.856939, 6.217813}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{9.920465, 6.143061, 6.217813}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-20.079535, 6.143061, 6.217813}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{9.920465, 21.143061, 6.217813}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{9.920465, -8.856939, 6.217813}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-20.079535, 21.143061, 6.217813}, 2.5]}, 
    {Hue[1], SphereBox[{-20.079535, -8.856939, 6.217813}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{-3.43243, 13.032699000000001`, -4.177774}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{-3.43243, -16.967301, -4.177774}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{11.56757, -1.967301, -4.177774}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-18.43243, -1.967301, -4.177774}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{11.56757, 13.032699000000001`, -4.177774}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{11.56757, -16.967301, -4.177774}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-18.43243, 13.032699000000001`, -4.177774}, 2.5]}, 
    {Hue[1], SphereBox[{-18.43243, -16.967301, -4.177774}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{-2.852386, 19.297634000000002`, 1.271144}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{-2.852386, -10.702366, 1.271144}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{12.147614, 4.297634, 1.271144}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-17.852386, 4.297634, 1.271144}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{12.147614, 19.297634000000002`, 1.271144}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{12.147614, -10.702366, 1.271144}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-17.852386, 19.297634000000002`, 1.271144}, 2.5]}, 
    {Hue[1], SphereBox[{-17.852386, -10.702366, 1.271144}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{-0.818015, 15.048736, 3.273614}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{-0.818015, -14.951264, 3.273614}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{14.181985, 0.048736, 3.273614}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-15.818015, 0.048736, 3.273614}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{14.181985, 15.048736, 3.273614}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{14.181985, -14.951264, 3.273614}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-15.818015, 15.048736, 3.273614}, 2.5]}, 
    {Hue[1], SphereBox[{-15.818015, -14.951264, 3.273614}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{-0.674019, 20.492347, -2.552841}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{-0.674019, -9.507653000000001, -2.552841}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{14.325981, 5.492347, -2.552841}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-15.674019, 5.492347, -2.552841}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{14.325981, 20.492347, -2.552841}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{14.325981, -9.507653000000001, -2.552841}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-15.674019, 20.492347, -2.552841}, 2.5]}, 
    {Hue[1], SphereBox[{-15.674019, -9.507653000000001, -2.552841}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{0.553322, 21.914921, 6.374806}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{0.553322, -8.085079, 6.374806}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{15.553322, 6.914921, 6.374806}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-14.446678, 6.914921, 6.374806}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{15.553322, 21.914921, 6.374806}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{15.553322, -8.085079, 6.374806}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-14.446678, 21.914921, 6.374806}, 2.5]}, 
    {Hue[1], SphereBox[{-14.446678, -8.085079, 6.374806}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{1.696956, 18.639217, 2.074148}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{1.696956, -11.360783, 2.074148}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{16.696956, 3.639217, 2.074148}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-13.303044, 3.639217, 2.074148}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{16.696956, 18.639217, 2.074148}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{16.696956, -11.360783, 2.074148}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-13.303044, 18.639217, 2.074148}, 2.5]}, 
    {Hue[1], SphereBox[{-13.303044, -11.360783, 2.074148}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{1.738685, 15.369587, -5.512195}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{1.738685, -14.630413, -5.512195}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{16.738685, 0.369587, -5.512195}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-13.261315, 0.369587, -5.512195}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{16.738685, 15.369587, -5.512195}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{16.738685, -14.630413, -5.512195}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-13.261315, 15.369587, -5.512195}, 2.5]}, 
    {Hue[1], SphereBox[{-13.261315, -14.630413, -5.512195}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{2.393193, 11.040059, 6.020375}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{2.393193, -18.959941, 6.020375}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{17.393193, -3.959941, 6.020375}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-12.606807, -3.959941, 6.020375}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{17.393193, 11.040059, 6.020375}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{17.393193, -18.959941, 6.020375}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-12.606807, 11.040059, 6.020375}, 2.5]}, 
    {Hue[1], SphereBox[{-12.606807, -18.959941, 6.020375}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{4.308498, 7.834039, 1.960745}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{4.308498, -22.165961, 1.960745}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{19.308498, -7.165961, 1.960745}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-10.691502, -7.165961, 1.960745}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{19.308498, 7.834039, 1.960745}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{19.308498, -22.165961, 1.960745}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-10.691502, 7.834039, 1.960745}, 2.5]}, 
    {Hue[1], SphereBox[{-10.691502, -22.165961, 1.960745}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{4.74515, 16.054065, -1.106685}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{4.74515, -13.945935, -1.106685}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{19.74515, 1.054065, -1.106685}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-10.254850000000001`, 1.054065, -1.106685}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{19.74515, 16.054065, -1.106685}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{19.74515, -13.945935, -1.106685}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-10.254850000000001`, 16.054065, -1.106685}, 2.5]}, 
    {Hue[1], SphereBox[{-10.254850000000001`, -13.945935, -1.106685}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{4.882381, 20.953366, -5.55863}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{4.882381, -9.046634000000001, -5.55863}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{19.882381, 5.953366, -5.55863}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-10.117619000000001`, 5.953366, -5.55863}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{19.882381, 20.953366, -5.55863}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{19.882381, -9.046634000000001, -5.55863}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-10.117619000000001`, 20.953366, -5.55863}, 2.5]}, 
    {Hue[1], 
     SphereBox[{-10.117619000000001`, -9.046634000000001, -5.55863}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{6.141022, 9.97408, -6.869852}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{6.141022, -20.02592, -6.869852}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{21.141022, -5.02592, -6.869852}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-8.858978, -5.02592, -6.869852}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{21.141022, 9.97408, -6.869852}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{21.141022, -20.02592, -6.869852}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-8.858978, 9.97408, -6.869852}, 2.5]}, 
    {Hue[1], SphereBox[{-8.858978, -20.02592, -6.869852}, 2.5]}}, {
    {Hue[
      NCache[
       Rational[1, 8], 0.125]], 
     SphereBox[{6.421051, 21.231364, -1.307116}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 4], 0.25]], 
     SphereBox[{6.421051, -8.768636, -1.307116}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 8], 0.375]], 
     SphereBox[{21.421051, 6.231364, -1.307116}, 2.5]}, 
    {Hue[
      NCache[
       Rational[1, 2], 0.5]], 
     SphereBox[{-8.578949, 6.231364, -1.307116}, 2.5]}, 
    {Hue[
      NCache[
       Rational[5, 8], 0.625]], 
     SphereBox[{21.421051, 21.231364, -1.307116}, 2.5]}, 
    {Hue[
      NCache[
       Rational[3, 4], 0.75]], 
     SphereBox[{21.421051, -8.768636, -1.307116}, 2.5]}, 
    {Hue[
      NCache[
       Rational[7, 8], 0.875]], 
     SphereBox[{-8.578949, 21.231364, -1.307116}, 2.5]}, 
    {Hue[1], SphereBox[{-8.578949, -8.768636, -1.307116}, 2.5]}}, 
   SphereBox[{-6.126381, 1.950415, -6.204545}, 2.5], 
   SphereBox[{-5.079535, 6.143061, 6.217813}, 2.5], 
   SphereBox[{-3.43243, -1.967301, -4.177774}, 2.5], 
   SphereBox[{-2.852386, 4.297634, 1.271144}, 2.5], 
   SphereBox[{-0.818015, 0.048736, 3.273614}, 2.5], 
   SphereBox[{-0.674019, 5.492347, -2.552841}, 2.5], 
   SphereBox[{0.553322, 6.914921, 6.374806}, 2.5], 
   SphereBox[{1.696956, 3.639217, 2.074148}, 2.5], 
   SphereBox[{1.738685, 0.369587, -5.512195}, 2.5], 
   SphereBox[{2.393193, -3.959941, 6.020375}, 2.5], 
   SphereBox[{4.308498, -7.165961, 1.960745}, 2.5], 
   SphereBox[{4.74515, 1.054065, -1.106685}, 2.5], 
   SphereBox[{4.882381, 5.953366, -5.55863}, 2.5], 
   SphereBox[{6.141022, -5.02592, -6.869852}, 2.5], 
   SphereBox[{6.421051, 6.231364, -1.307116}, 2.5]},
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm]},
  ImageSize->{629.4632868075057, 443.6363636363636},
  ViewAngle->0.5492675972756587,
  ViewCenter->{{0.5, 0.5, 0.5}, {0.4181407850468578, 0.5869440074249597}},
  ViewPoint->{0, 0, 2},
  ViewVertical->{-0.06006741738187725, -0.8812934445084879, 
   1.1402457518901035`}]], "Output",
 CellChangeTimes->{{3.6790994137948575`*^9, 3.679099434323642*^9}, {
   3.679099484787288*^9, 3.6790995015321054`*^9}, {3.679099600428134*^9, 
   3.6790996184941187`*^9}, 3.6791001765160685`*^9, {3.6791003191893964`*^9, 
   3.6791003404307947`*^9}, 3.679100802174671*^9, 3.6791013150027227`*^9, 
   3.6791013467390013`*^9, {3.679101409459238*^9, 3.6791015160312133`*^9}, {
   3.6791015523948956`*^9, 3.679101581584161*^9}, {3.679101715692557*^9, 
   3.6791017734060016`*^9}, 3.6791058183835945`*^9, 3.6791061281253214`*^9, 
   3.6791061718916354`*^9, 3.6791062476439905`*^9, {3.6791071608144217`*^9, 
   3.6791071798929195`*^9}, 3.6791073693042774`*^9, {3.679107591914139*^9, 
   3.6791075936795855`*^9}, {3.6791076241613936`*^9, 
   3.6791076535876927`*^9}, {3.679107688094821*^9, 3.679107735311163*^9}, 
   3.679270468968198*^9, 3.6792733309024086`*^9, 3.6792750845897727`*^9, 
   3.679276390636962*^9, 3.679285046011657*^9}],

Cell[BoxData["\<\"Packing.png\"\>"], "Output",
 CellChangeTimes->{{3.6790994137948575`*^9, 3.679099434323642*^9}, {
   3.679099484787288*^9, 3.6790995015321054`*^9}, {3.679099600428134*^9, 
   3.6790996184941187`*^9}, 3.6791001765160685`*^9, {3.6791003191893964`*^9, 
   3.6791003404307947`*^9}, 3.679100802174671*^9, 3.6791013150027227`*^9, 
   3.6791013467390013`*^9, {3.679101409459238*^9, 3.6791015160312133`*^9}, {
   3.6791015523948956`*^9, 3.679101581584161*^9}, {3.679101715692557*^9, 
   3.6791017734060016`*^9}, 3.6791058183835945`*^9, 3.6791061281253214`*^9, 
   3.6791061718916354`*^9, 3.6791062476439905`*^9, {3.6791071608144217`*^9, 
   3.6791071798929195`*^9}, 3.6791073693042774`*^9, {3.679107591914139*^9, 
   3.6791075936795855`*^9}, {3.6791076241613936`*^9, 
   3.6791076535876927`*^9}, {3.679107688094821*^9, 3.679107735311163*^9}, 
   3.679270468968198*^9, 3.6792733309024086`*^9, 3.6792750845897727`*^9, 
   3.679276390636962*^9, 3.67928504647124*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "file", " ", "contains", " ", "the", " ", "relative", " ", 
     "vectors", " ", "from", " ", "particle", " ", "i", " ", "to", " ", "j", 
     " ", "in", " ", 
     RowBox[{"rows", ".", " ", "It"}], " ", "first", " ", "has", " ", "the", 
     " ", "vectors", " ", "from", " ", "i", " ", "to", " ", "all", " ", 
     "other", " ", "j"}], ",", " ", 
    RowBox[{"and", " ", "iterates", " ", "over", " ", 
     RowBox[{"i", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Take", " ", "the", " ", "norm", " ", "of", " ", "the", " ", "relative", 
     " ", "vector"}], ",", " ", 
    RowBox[{
    "stored", " ", "in", " ", "entries", " ", "3", " ", "to", " ", "5."}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Initially", " ", 
    RowBox[{"it", "'"}], "s", " ", "in", " ", "one", " ", "long", " ", "list",
     " ", "so", " ", "we", " ", "reshape", " ", "into", " ", "a", " ", 
    "square", " ", 
    RowBox[{"matrix", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"vecData", "=", " ", 
     RowBox[{"Import", "[", "\"\<part_vec.out\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normData", "=", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"3", ";;", "5"}], "\[RightDoubleBracket]"}], "]"}], "&"}], 
       ",", "vecData"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normData", "=", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{"normData", ",", 
       RowBox[{"{", 
        RowBox[{"numPart", ",", "numPart"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6791001892922807`*^9, 3.679100222657792*^9}, {
  3.679100484832032*^9, 3.6791006394477777`*^9}, {3.679100680294849*^9, 
  3.679100771686917*^9}, {3.6791008177007504`*^9, 3.6791009496573772`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "For", " ", "each", " ", "pair", " ", "of", " ", "particles", " ", "check",
     " ", "if", " ", "their", " ", "distance", " ", "is", " ", "less", " ", 
    "than", " ", "the", " ", "sum", " ", "of", " ", "their", " ", 
    RowBox[{"radii", ".", " ", "This"}], " ", "means", " ", "that", " ", 
    "they", " ", "are", " ", "touching", " ", "and", " ", "thus", " ", "we", 
    " ", "count", " ", "as", " ", 
    RowBox[{"True", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TouchingTable", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"0", "<", 
        RowBox[{
         RowBox[{
         "normData", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], "<", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "partRadii", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
           "+", 
          RowBox[{
          "partRadii", "\[LeftDoubleBracket]", "j", 
           "\[RightDoubleBracket]"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numPart"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "numPart"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Count", " ", "how", " ", "many", " ", "True", " ", 
      RowBox[{"(", 
       RowBox[{"touching", " ", "spheres"}], ")"}], " ", "there", " ", "are", 
      " ", "per", " ", "particle"}], ",", " ", 
     RowBox[{
     "we", " ", "ignore", " ", "itself", " ", "by", " ", "forcing", " ", 
      "the", " ", "norm", " ", "to", " ", "be", " ", "GREATER", " ", "than", 
      " ", "0."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"TouchingSpheres", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Count", "[", 
        RowBox[{"#", ",", "True"}], "]"}], "&"}], ",", "TouchingTable"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"N", "[", 
    RowBox[{"Mean", "[", "TouchingSpheres", "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Histogram", "[", "TouchingSpheres", "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.6367219536198287`*^9, 3.677562558950529*^9, 3.6790242946216593`*^9, {
   3.6790244240455313`*^9, 3.679024424944189*^9}, {3.679024472279888*^9, 
   3.6790244794040008`*^9}, {3.6790247894763484`*^9, 
   3.6790248908728986`*^9}, {3.679025236360747*^9, 3.6790253497029924`*^9}, {
   3.679027001865302*^9, 3.6790270072717876`*^9}, 3.679094591172221*^9, {
   3.679094621682384*^9, 3.6790946302329516`*^9}, {3.6790947010552993`*^9, 
   3.6790947519903355`*^9}, {3.679095058537463*^9, 3.6790950649098372`*^9}, {
   3.6790954874783325`*^9, 3.67909548996498*^9}, {3.6790968692530966`*^9, 
   3.6790969310287075`*^9}, {3.6790996280614357`*^9, 3.67909962965681*^9}, {
   3.679100150124955*^9, 3.6791001603938446`*^9}, 3.679100231606525*^9, {
   3.679100438612957*^9, 3.679100459084798*^9}, {3.6791007817167006`*^9, 
   3.6791008167625866`*^9}, {3.6791009635583334`*^9, 3.679100976104991*^9}, {
   3.679101112237956*^9, 3.6791011420795784`*^9}, {3.6791015255147886`*^9, 
   3.6791015364236584`*^9}, {3.6792749741565995`*^9, 
   3.6792749993808146`*^9}, {3.679275033678417*^9, 3.67927505950766*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "1", ",", "1", ",", "2", ",", "0", ",", "0", ",", "0", ",", "2", 
   ",", "0", ",", "2", ",", "3", ",", "2", ",", "0", ",", "1", ",", "2"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6790947088682013`*^9, 3.6790947188132586`*^9}, 
   3.679094752443485*^9, 3.6790950654419374`*^9, 3.6790956852580323`*^9, 
   3.679095747040848*^9, 3.6790965281630993`*^9, {3.679096931309973*^9, 
   3.6790969579287896`*^9}, 3.679097012843639*^9, {3.679098429548457*^9, 
   3.6790984648341227`*^9}, {3.6790987927397904`*^9, 3.679098814005189*^9}, {
   3.679099485084179*^9, 3.6790995018133698`*^9}, 3.679099631156891*^9, {
   3.6791001611909285`*^9, 3.6791001768442097`*^9}, 3.6791002320596743`*^9, {
   3.679100319611294*^9, 3.6791003408214407`*^9}, {3.6791004388634863`*^9, 
   3.679100459366061*^9}, {3.6791007977590303`*^9, 3.6791008025184393`*^9}, {
   3.6791009363322797`*^9, 3.679100964840743*^9}, 3.6791013154871206`*^9, {
   3.67910140978738*^9, 3.679101581849799*^9}, {3.6791017160050745`*^9, 
   3.6791017737433844`*^9}, 3.6791058188211174`*^9, 3.6791061287630396`*^9, 
   3.679106172133909*^9, 3.679106247930313*^9, {3.6791071611037483`*^9, 
   3.6791071801742363`*^9}, 3.679107369898057*^9, {3.6791075924922934`*^9, 
   3.679107593835844*^9}, {3.6791076244647355`*^9, 3.6791076539481077`*^9}, {
   3.679107688454218*^9, 3.679107735644539*^9}, 3.679270469624477*^9, 
   3.6792733319676123`*^9, {3.679274975828559*^9, 3.6792749997569084`*^9}, {
   3.6792750339284306`*^9, 3.6792750442258153`*^9}, 3.67927508776908*^9, 
   3.679276391501936*^9, 3.679285046903726*^9}],

Cell[BoxData["1.2`"], "Output",
 CellChangeTimes->{{3.6790947088682013`*^9, 3.6790947188132586`*^9}, 
   3.679094752443485*^9, 3.6790950654419374`*^9, 3.6790956852580323`*^9, 
   3.679095747040848*^9, 3.6790965281630993`*^9, {3.679096931309973*^9, 
   3.6790969579287896`*^9}, 3.679097012843639*^9, {3.679098429548457*^9, 
   3.6790984648341227`*^9}, {3.6790987927397904`*^9, 3.679098814005189*^9}, {
   3.679099485084179*^9, 3.6790995018133698`*^9}, 3.679099631156891*^9, {
   3.6791001611909285`*^9, 3.6791001768442097`*^9}, 3.6791002320596743`*^9, {
   3.679100319611294*^9, 3.6791003408214407`*^9}, {3.6791004388634863`*^9, 
   3.679100459366061*^9}, {3.6791007977590303`*^9, 3.6791008025184393`*^9}, {
   3.6791009363322797`*^9, 3.679100964840743*^9}, 3.6791013154871206`*^9, {
   3.67910140978738*^9, 3.679101581849799*^9}, {3.6791017160050745`*^9, 
   3.6791017737433844`*^9}, 3.6791058188211174`*^9, 3.6791061287630396`*^9, 
   3.679106172133909*^9, 3.679106247930313*^9, {3.6791071611037483`*^9, 
   3.6791071801742363`*^9}, 3.679107369898057*^9, {3.6791075924922934`*^9, 
   3.679107593835844*^9}, {3.6791076244647355`*^9, 3.6791076539481077`*^9}, {
   3.679107688454218*^9, 3.679107735644539*^9}, 3.679270469624477*^9, 
   3.6792733319676123`*^9, {3.679274975828559*^9, 3.6792749997569084`*^9}, {
   3.6792750339284306`*^9, 3.6792750442258153`*^9}, 3.67927508776908*^9, 
   3.679276391501936*^9, 3.6792850469057283`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {1., 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{90.43380704563651, 
          164.99181345076062`}, {-79.88859376777474, 105.28684442722336`}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {2., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{164.44181345076063`, 
          238.9998198558847}, {-6.038418489775481, 105.28684442722336`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {3., 6}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{238.44981985588473`, 
          313.00782626100886`}, {-116.81368140677434`, 105.28684442722336`}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {4., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{312.4578262610089, 387.01583266613306`}, {
          67.81175678822375, 105.28684442722336`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-1.1, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-1., 4.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6790947088682013`*^9, 3.6790947188132586`*^9}, 
   3.679094752443485*^9, 3.6790950654419374`*^9, 3.6790956852580323`*^9, 
   3.679095747040848*^9, 3.6790965281630993`*^9, {3.679096931309973*^9, 
   3.6790969579287896`*^9}, 3.679097012843639*^9, {3.679098429548457*^9, 
   3.6790984648341227`*^9}, {3.6790987927397904`*^9, 3.679098814005189*^9}, {
   3.679099485084179*^9, 3.6790995018133698`*^9}, 3.679099631156891*^9, {
   3.6791001611909285`*^9, 3.6791001768442097`*^9}, 3.6791002320596743`*^9, {
   3.679100319611294*^9, 3.6791003408214407`*^9}, {3.6791004388634863`*^9, 
   3.679100459366061*^9}, {3.6791007977590303`*^9, 3.6791008025184393`*^9}, {
   3.6791009363322797`*^9, 3.679100964840743*^9}, 3.6791013154871206`*^9, {
   3.67910140978738*^9, 3.679101581849799*^9}, {3.6791017160050745`*^9, 
   3.6791017737433844`*^9}, 3.6791058188211174`*^9, 3.6791061287630396`*^9, 
   3.679106172133909*^9, 3.679106247930313*^9, {3.6791071611037483`*^9, 
   3.6791071801742363`*^9}, 3.679107369898057*^9, {3.6791075924922934`*^9, 
   3.679107593835844*^9}, {3.6791076244647355`*^9, 3.6791076539481077`*^9}, {
   3.679107688454218*^9, 3.679107735644539*^9}, 3.679270469624477*^9, 
   3.6792733319676123`*^9, {3.679274975828559*^9, 3.6792749997569084`*^9}, {
   3.6792750339284306`*^9, 3.6792750442258153`*^9}, 3.67927508776908*^9, 
   3.679276391501936*^9, 3.6792850485095325`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", " ", "a", " ", "given", " ", "set"}], ",", " ", 
    RowBox[{
    "scale", " ", "the", " ", "values", " ", "from", " ", "0", " ", "to", " ",
      "0.7", " ", "to", " ", "be", " ", "fed", " ", "into", " ", 
     RowBox[{"Hue", "[", "]"}], " ", 
     RowBox[{"function", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NormColour", "[", "set_", "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"set", "-", 
        RowBox[{"Min", "[", "set", "]"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", "set", "]"}], "-", 
         RowBox[{"Min", "[", "set", "]"}]}], ")"}]], "*", 
      FractionBox["7", "10"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TouchingNumColour", "=", 
     RowBox[{"NormColour", "[", "TouchingSpheres", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Draw", " ", "the", " ", "main", " ", "cell", " ", "with", " ", 
      "colours", " ", "based", " ", "on", " ", "coordination", " ", 
      RowBox[{"number", ".", " ", "Small"}], " ", "is", " ", "red"}], ",", 
     " ", 
     RowBox[{"large", " ", "is", " ", 
      RowBox[{"blue", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"graphicsset2", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Hue", "[", 
          RowBox[{
          "TouchingNumColour", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], "]"}], ",", 
         RowBox[{"Sphere", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "\[LeftDoubleBracket]", 
             RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"3", ";;", "5"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "partRadii", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numPart"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"graphicsset2", ",", " ", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     ",", 
     RowBox[{"ViewPoint", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "2"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.679095570088445*^9, 3.679095630925596*^9}, {
   3.6790956939340916`*^9, 3.679095706121242*^9}, 3.6790957603415456`*^9, {
   3.67909592643174*^9, 3.679095931572626*^9}, {3.67909618655286*^9, 
   3.679096382848508*^9}, {3.679096962100878*^9, 3.6790970111404276`*^9}, {
   3.6792751134364033`*^9, 3.6792751498555794`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {Hue[
     NCache[
      Rational[7, 15], 0.4666666666666667]], 
    SphereBox[{4.882381, 5.953366, -5.55863}, 2.5]}, 
   {Hue[
     NCache[
      Rational[7, 30], 0.23333333333333334`]], 
    SphereBox[{0.553322, 6.914921, 6.374806}, 2.5]}, 
   {Hue[
     NCache[
      Rational[7, 30], 0.23333333333333334`]], 
    SphereBox[{-0.674019, 5.492347, -2.552841}, 2.5]}, 
   {Hue[
     NCache[
      Rational[7, 15], 0.4666666666666667]], 
    SphereBox[{4.308498, -7.165961, 1.960745}, 2.5]}, 
   {Hue[0], SphereBox[{-6.126381, 1.950415, -6.204545}, 2.5]}, 
   {Hue[0], SphereBox[{4.74515, 1.054065, -1.106685}, 2.5]}, 
   {Hue[0], SphereBox[{1.738685, 0.369587, -5.512195}, 2.5]}, 
   {Hue[
     NCache[
      Rational[7, 15], 0.4666666666666667]], 
    SphereBox[{-2.852386, 4.297634, 1.271144}, 2.5]}, 
   {Hue[0], SphereBox[{-5.079535, 6.143061, 6.217813}, 2.5]}, 
   {Hue[
     NCache[
      Rational[7, 15], 0.4666666666666667]], 
    SphereBox[{6.421051, 6.231364, -1.307116}, 2.5]}, 
   {Hue[
     NCache[
      Rational[7, 10], 0.7]], SphereBox[{1.696956, 3.639217, 2.074148}, 2.5]}, 
   {Hue[
     NCache[
      Rational[7, 15], 0.4666666666666667]], 
    SphereBox[{6.141022, -5.02592, -6.869852}, 2.5]}, 
   {Hue[0], SphereBox[{-3.43243, -1.967301, -4.177774}, 2.5]}, 
   {Hue[
     NCache[
      Rational[7, 30], 0.23333333333333334`]], 
    SphereBox[{-0.818015, 0.048736, 3.273614}, 2.5]}, 
   {Hue[
     NCache[
      Rational[7, 15], 0.4666666666666667]], 
    SphereBox[{2.393193, -3.959941, 6.020375}, 2.5]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  ImageSize->{295.05718769419906`, 296.73408943419935`},
  ViewPoint->{0, 0, 2},
  ViewVertical->{-0.21824309817572907`, -0.06855913873607333, \
-1.0408883719046003`}]], "Output",
 CellChangeTimes->{{3.6790956245033903`*^9, 3.6790956311599813`*^9}, {
   3.6790956853049097`*^9, 3.6790957063835435`*^9}, {3.679095747072099*^9, 
   3.679095760497805*^9}, 3.6790959318695183`*^9, 3.6790961886533904`*^9, {
   3.679096266990641*^9, 3.679096383270404*^9}, 3.6790965281943493`*^9, {
   3.6790969329663076`*^9, 3.679096957944419*^9}, 3.679097012874892*^9, {
   3.679098429579708*^9, 3.6790984648653774`*^9}, {3.6790987927710404`*^9, 
   3.679098814036442*^9}, {3.6790994851154304`*^9, 3.679099501844622*^9}, 
   3.6791001773286095`*^9, {3.6791003200956936`*^9, 3.6791003412745886`*^9}, 
   3.679100802565316*^9, 3.679101315518372*^9, {3.679101409818632*^9, 
   3.6791015163749857`*^9}, {3.6791015528480444`*^9, 3.679101581943554*^9}, {
   3.679101716114453*^9, 3.679101773834486*^9}, 3.679105821461878*^9, 
   3.6791061288461337`*^9, 3.6791061722049885`*^9, 3.679106248010403*^9, {
   3.679107161175829*^9, 3.6791071802553267`*^9}, 3.679107370023066*^9, {
   3.6791075932110815`*^9, 3.679107593913973*^9}, {3.679107624599888*^9, 
   3.679107654040203*^9}, {3.679107688547969*^9, 3.679107735735642*^9}, 
   3.679270469733859*^9, 3.679273334294224*^9, {3.6792750651075425`*^9, 
   3.6792751501055937`*^9}, 3.6792763916290827`*^9, 
   3.6792850492183304`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzMvXd4FeX2/j0/9Jzv0dPPV+wo6PF4VBBQVKT33ntPIJAAISSUhIQUdnon
JCQhlUDooYfee+8dpBcRRBRFQRCY32fN8+xkEwb1vd73j5frWmRn9sxkZj33
ve57TW3bf/TgQT79Rw/x6F+x+cj+foOHeIyq2Mx3JJOe+T+G8X+aEs0qGvLZ
NAznf9a/ZvKf/uX/p5/vWD+eNYuLi01PT09ntFbf3rZ+/PGxb+Wz/ONzOfml
lZr1ls2K+PyMnuxcUode6Kb9Qn90Wcj5j896oa+tH3+w2yjD2qI/2CzOP+u7
lmoda+THMzLHe/ab8GzJEr9jbav1FpWZRX433rFf/5+syc+4LsLGPzntGZtp
zdVfXW/zVUWb3Oi/aPxNz+/8Tm2Xc1daPH2lFWx2gbDW9Heb+Z9YqZUfK4Nv
lORdo8r1n16/3Xb+0ebPaAQH2XxVz2ba6/YD8T8uszpR9Bebxf9YslM6/WN/
59992f7vvlyyvj/97jVbKXyhTHokl9Zvr9gsZgezpk//K53tt/VZm1lftMnb
cyV78pSxkW3t+CvjYC37ks1f+11rbme/5rdstvTPNn+jiVpzoPXDnsytnpb7
t23W9+eSbW7622tu/vszX9Fm2l/K/q1Nv5XlSjZr+avNtMZqfevt11fZZom/
lfwNndE1Nss61cO5Aley/73sClbqxNlVNbsC+b7NtH/YTGukVr/sV1ZfSvv3
Sz79q+STTs4S++Q89/iyZf74P8uuZVGZVAgsrO/tytG7LtOcoP5fm/kaqnXP
t9/CZ2zW8rzLZtj9Nee0/y3Zfp1Gh/yw5nnX/q+V5rKGzd99oez6xulhsaPL
27+S8TLb/rHNtpe3mdbgt/+qnbrqz3pxmxpp7VLD3165nco+ZYjsZOb/0d96
9bcG6OlC9vi0+r/9t16y/1st9Npcif9Kyd//HYPxwq8MhrNOu27qKzZ/UG9+
KXL/9SuDUOporE+vP3VgjDSbtRB/fHwtZbbvtZJv9Val2Oygsyx1tPnjzg1y
3UG9QUllvlKlhf+72GxIBZt111XrSbBPT7mSTe9ks+wbJd/qrYm1X8sfbNfi
3Ko3bPZOb1WU/frsikF7mzW76qlzm+uoNYfbD2S/p63F2nq9VWG/las+Nmtx
qrLrXuptCf6trPW2Wfbtkm/1WgJ/PVeu29LTZtoT6/O3ftiDtNQAOVflumnv
2Ky+llrpyN9K3ZNrdl3LOyXf1lbrs8yVNc9TurE/2GzfwJK1vFt2fc30TtuV
pUq/nmBXMHrYbLud0n6u/qpTYW7evGmeOHFCAhLL/8+Yly9fLpndro18/VeG
yc9lfif+/1uyy7X+3/9xVXn/aPfHS/6Mn81yT2yElXerCXq1ZETL5NTODvay
/n/OdOQWmI786aZj8kxqRxuqY3vTMWWe6Zg6n1hgOgoXlLgf1+Xt3FtNly36
fQ2fsxVz3dpu1v//NB3Z2abxyeem8VkjSNASzndg67piSnrhUvvRmwwwjRaD
TKPlYNNoM9Q02g4zjXbefB5iOmYtNx0zim1b5FLPqjHU3GamF2y2lxhgTS7P
tuWYRg3ZtoZAsYVp1G6vtq1hb7bLXW0X22G09zGNTiPYqdHUjjGm0TvINPqO
NY1+wepn7zGmY8E60zFvte0ofWC7rdZoK+/+K0d83K2Pr7GtWRi+z9jeOmxv
Y7a3NbnsyPZ2Z3v7mkYz8tiaHHZkW7uOBBoBpuHGtg0INY1B4aYxONI0hkSb
hnesaQyLVT+H8rtXhOlYusl0LFxb4jE+tNmHz9SW97BHwB9sluirs2x8/AlB
lj+px2qasuXgs3YntrwHWXYzjVZkuSMj3s3PNPr4m0Z/susZxtZFmIYPWzgi
3jRGJZqGf7JpjEkxjcAJpMYITGUzjIAJpjE6yTSGx5gfDw2oWpJoDeKuvx+w
SrNeZFM/VZtbg839tIlKtGxuo54Ags1t70mCAWkfANGfJHsBgmEONjOKTYwz
jSA2J4TNHJdmGuHpphGZSWSxxVHZDLQRCR/CGctxGcw6wXSs3aHy7brZnexx
O9ia/AqbV01h4eNaajM/AQ81W8F88NCErLZmMzuR1Z5spjub6Qlmh4WwieAg
gIwGk9FxZDMi1TRi2MT4SaaRBBeS80xj/GTTSCmQDKdMgXnG+Cmmkci0WL6L
YD7/BNOxcnMVmwH/VG18+9+CtJf18W02v3rpbnwMrD/RNKR4GU27QT1g3WUg
9KIseLAbQ8i2L7vhz24Ex5iGI4GkjjeNODKdRJZTSG0am5lRYBqTpppG9jTT
yJlBUBRzZvE7PycR6dNNY0KhaSQwb8h407Fio1G5ZAg00Nv8fqBbcooOObIn
afQ496cB+wPg6wP4Zl0obZSVrtC0LyVloC8UBOwjQU8g6AljfyLZnziQkzTR
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
qI7C0AYodSrtez2x7gdWxymq63ujG6GBcCK/aocG6owGAkqL+iJpojFZhiJp
4pE0tLydnuzBIT2Al3BkSjgKw7m5OEELfO/KYt+7rl5A12z8VY4FK5JGrNc2
BkkdnwFJw8wKuyhKNCgQNKQ6qJGkexIU7iuFrIkCrEnmt3zyBSaUXJbmAMmC
aJgRbD2VyrQy5YcOZCLEzWthcfMHJUaFJo3+qLNKqiwJNmJhHxM5SvJqYeLG
fKWDeai8doicESilUQKTjSanHTBJYv2ScZ5TEAkpp0z2yItO9shbEdkjbR4t
X0aarLqcZLAy2kloNxxxM0TyaVFXHyC4+FhIPZTkffi/4ASxUw6LpTo4qVcE
59kEK+hcSofHjf4MSwXPb8yXeDvN8Q7bopE6oZF6+N6SPpi2A/F0huDpxCFu
aHUnPdiXhriZgLiRV7flOeGZaKM5aCNwcm2Ren+vQJdaXn5DMzuPVtyI72HN
Wdc8sWrIqqA4o0dGG9FgwWHFyngNChV1E0SodN+SFk4SEkwT62W68tsllvp0
U6aZr6eYyyeaKsYZzCUZPMaarqx21dRTcPNq2JD5Qw4pZLztjGht+zdUMWor
qmU4SKxEvFRZovCah0j0pGkmJxtiZuRKHTVpjOBnq8nHBn5SDmv8SHRLFRDW
4EeFJ3fyIZqsUOHso47qUrLmsfakZRcwlvticLEGnFLPVXOPjOM3foHf/wz8
vIbKeku/JV2/sO81L+Z77T/Wb0r3LoelW9X34mph0TTQIZYnt8E1ivK9+d19
b2lv1NUA1JUNs4wttRtptz8VGYPFe9y8KX0Oy+bibB0+9jpq69YSg53f5GCn
tRdswvR2cBMpWCxukh2BYjFj8WKwosAhQJFkZxIpbJbaUp6tnu8zv2HhzDLf
zjB3TDW1WAilGFEm8OnnBeorvfvn/T3gqyB9ZfZyZDJeVXq7pSFRRzMRIUOe
rv/UeqwLVjOq0u87UIdTVWHtxunQXJIfSSX8w5MaLeHsNupQdkk7TeoxwJUq
EYcFXGfDacfGmrRjOeC6H5DoLyDtWJzkRrpKH6ir174ceeCV+IfvlX4DTGEK
1cdabo613P4j3+sq7yfLm5pYy/FYy4lYy+PxoqbiRc3CWl6AtbwMa3mNnFBj
LW/Bi9ohIYnHOO8nT9TvJ9uQxNfmmpDEi6yfIZASy7hNHqLI1VXW4rFwslZO
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
Jf7//N37j/8DAZ2z+Q==\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"meancoord", " ", "=", " ", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"TouchingSpheres", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{"DistanceBtwCentres_", "/;", 
             RowBox[{"DistanceBtwCentres", "<", 
              RowBox[{"limit", "*", "d"}]}]}], "]"}], "/@", "DistTable"}], 
          ")"}], "-", "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"N", "[", 
        RowBox[{"Mean", "[", "TouchingSpheres", "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"limit", ",", 
        RowBox[{"{", 
         RowBox[{
         "1.000001", ",", "1.0001", ",", "1.001", ",", "1.002", ",", "1.004", 
          ",", "1.006", ",", "1.008", ",", "1.01", ",", "1.02", ",", "1.03", 
          ",", "1.04", ",", "1.05", ",", "1.06", ",", "1.07", ",", "1.08", 
          ",", "1.09", ",", "1.1"}], "}"}]}], "}"}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"limitlist", "=", 
     RowBox[{"{", 
      RowBox[{
      "1.000001", ",", "1.0001", ",", "1.001", ",", "1.002", ",", "1.004", 
       ",", "1.006", ",", "1.008", ",", "1.01", ",", "1.02", ",", "1.03", ",",
        "1.04", ",", "1.05", ",", "1.06", ",", "1.07", ",", "1.08", ",", 
       "1.09", ",", "1.1"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"limitlist", ",", "meancoord"}], "}"}], "]"}], "]"}]}], 
   "*)"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"vecData", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vecDataCrop", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "\[LeftDoubleBracket]", 
       RowBox[{"3", ";;", "5"}], "\[RightDoubleBracket]"}], "&"}], ",", 
     "vecData"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vecDataCrop", "=", 
   RowBox[{"ArrayReshape", "[", 
    RowBox[{"vecDataCrop", ",", 
     RowBox[{"{", 
      RowBox[{"numPart", ",", "numPart", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vecDataTouching", "=", 
   RowBox[{"Pick", "[", 
    RowBox[{"vecDataCrop", ",", "TouchingTable"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bondAngles", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"VectorAngle", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
        "vecDataTouching", "\[LeftDoubleBracket]", "n", 
         "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "i", 
        "\[RightDoubleBracket]"}], ",", 
       RowBox[{
        RowBox[{
        "vecDataTouching", "\[LeftDoubleBracket]", "n", 
         "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "j", 
        "\[RightDoubleBracket]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "vecDataTouching", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{
        "vecDataTouching", "\[LeftDoubleBracket]", "n", 
         "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"i", "+", "1"}], ",", 
       RowBox[{"Length", "[", 
        RowBox[{
        "vecDataTouching", "\[LeftDoubleBracket]", "n", 
         "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bondAngles", "=", 
   RowBox[{"Flatten", "[", "bondAngles", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "[", "bondAngles", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"bondAngles", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Pi]", ",", 
       FractionBox["\[Pi]", "64"]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"60", "Degree"}], ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "4"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"109.5", "Degree"}], ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "4"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red"}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.67927336316971*^9, 3.6792733878826065`*^9}, {
   3.679273420219988*^9, 3.679273569173347*^9}, {3.6792736761255283`*^9, 
   3.6792736976759105`*^9}, {3.6792737322689533`*^9, 
   3.6792738815555854`*^9}, {3.679273921111878*^9, 3.6792739268322725`*^9}, {
   3.679273999420353*^9, 3.6792740395849285`*^9}, {3.679274088974718*^9, 
   3.679274093584323*^9}, {3.679274137900447*^9, 3.679274178742397*^9}, {
   3.679274261133091*^9, 3.679274332966798*^9}, {3.6792743751400614`*^9, 
   3.679274382232751*^9}, {3.6792744333853436`*^9, 3.6792744856727724`*^9}, {
   3.679274529031332*^9, 3.6792745383979883`*^9}, {3.679274581681658*^9, 
   3.679274640028515*^9}, {3.6792751586548862`*^9, 3.6792752142878637`*^9}, {
   3.679275301014038*^9, 3.6792753495307655`*^9}, 3.679275388335246*^9, {
   3.6792754262411537`*^9, 3.679275460701414*^9}, {3.6792755302996407`*^9, 
   3.679275644417907*^9}, {3.6792756815867243`*^9, 3.6792757006131306`*^9}, {
   3.6792758059215217`*^9, 3.67927582635451*^9}, {3.6792759012367563`*^9, 
   3.6792759954759655`*^9}, {3.6792760264623356`*^9, 
   3.6792760395838223`*^9}, {3.6792760749671793`*^9, 
   3.6792761405578856`*^9}, {3.679276182170581*^9, 3.6792762798159604`*^9}, {
   3.679285043870925*^9, 3.679285052399909*^9}}],

Cell[BoxData["1.1781783757581643`"], "Output",
 CellChangeTimes->{
  3.6792740398818192`*^9, 3.679274334983103*^9, 3.679274379245409*^9, {
   3.679274438301649*^9, 3.6792744798388476`*^9}, {3.6792745325997286`*^9, 
   3.6792745386948776`*^9}, {3.679274582009799*^9, 3.679274640316839*^9}, 
   3.679275004227605*^9, 3.679275036303549*^9, 3.6792750884722395`*^9, {
   3.6792751541695385`*^9, 3.679275214537876*^9}, {3.679275302264099*^9, 
   3.679275349812029*^9}, 3.679275388694639*^9, {3.6792754304132357`*^9, 
   3.679275461107685*^9}, {3.679275531034054*^9, 3.6792756343115377`*^9}, {
   3.6792756834828577`*^9, 3.679275700901455*^9}, {3.6792758095716286`*^9, 
   3.6792758266688633`*^9}, {3.6792759076709957`*^9, 3.679275912728685*^9}, {
   3.6792759429242315`*^9, 3.679275965908941*^9}, 3.6792759963041325`*^9, {
   3.6792760306656666`*^9, 3.679276039818206*^9}, {3.6792760775513086`*^9, 
   3.6792760994116516`*^9}, {3.679276134463832*^9, 3.679276140839149*^9}, 
   3.6792761907425823`*^9, {3.67927623724842*^9, 3.67927628022223*^9}, 
   3.6792763916721277`*^9, {3.6792850492403555`*^9, 3.6792850527452993`*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.238], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.238], Thickness[Small]}], 
      RectangleBox[{1.1780972450961724`, 0}, {1.227184630308513, 1},
       RoundingRadius->0], RectangleBox[{1.2762720155208536`, 0}, {1.325359400733194, 1},
       RoundingRadius->0], RectangleBox[{1.521708941582556, 0}, {1.5707963267948966`, 1},
       RoundingRadius->0], RectangleBox[{1.6198837120072371`, 0}, {1.6689710972195777`, 1},
       RoundingRadius->0], RectangleBox[{1.6689710972195777`, 0}, {1.718058482431918, 2},
       RoundingRadius->0], RectangleBox[{1.9634954084936207`, 0}, {2.012582793705961, 1},
       RoundingRadius->0], RectangleBox[{2.1598449493429825`, 0}, {2.2089323345553233`, 1},
       RoundingRadius->0], RectangleBox[{2.84706834231575, 0}, {2.8961557275280905`, 1},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     Dashing[{Small, Small}], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnVqsaxF08IM9AxTA+Em/xU62Sy6xR+VvgfNPBgUz
fPh4BM6v/WG81k3uPJx/z9d94uHuK3C+welJz6d/uQnnX9iQ1cbIeB/OF0os
WHDe5hGcL/fy5PuIN0/g/MClmY/X5D6H8+PKbzyRUn0F50+q7e0KXvcGztdg
Tlx0TOs9nO97nvHJyncf4HxJ828nrhp8gvMvaV7awtf3Gc63idl788mTL3D+
rhWnAxaofIPzVRoOnsuo/w7nLyq8NU/s8A84n/fdrdKLir/gfM1Vr1o1q37D
+ZENsi/Sdv+B80sfmgduFP8H5y+NKeV5GPMfzj/Mnchw3ZfBAcZfpff77+Ff
CP7se8uWKM9hhPOZQo6d4/RmgvOdMnOn7vuG4Pdwq7E+m8YM5/sUB/2Y7MIC
54tlTJiy5RmCv+NP6NnFraxw/sWw/k5JIzY4/7PtrXeMlxH8nlczrhc0ssP5
+iqZmUEqHAj3/z0wnekIgj9nTo+nZSEnnD/9ROaSR0JccD7nrl1NQocQ/BDv
yX8F8rjh/BWZtYpNfDxwfrHv7ROVexB8931ekk/ieOH8L+cc2WT/IfjiS9eU
3VnFB+e7cGhO4PPhh/OVWkQ82Jch+JDcIuAAAIHGcs4=
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     Dashing[{Small, Small}], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzRC58ybTlH/2DDAA5Sf9FjvZLrnEHpW/Bc4/GRTM
8OHjETi/9ofxWje583D+PV/3iYe7r8D5BqcnPZ/+5Sacf2FDVhsj4304Xyix
YMF5m0dwvtzLk+8j3jyB8wOXZj5ek/sczo8rv/FESvUVnD+ptrcreN0bOF+D
OXHRMa33cL7vecYnK999gPMlzb+duGrwCc6/pHlpC1/fZzjfJmbvzSdPvsD5
u1acDlig8g3OV2k4eC6j/jucv6jw1jyxwz/gfN53t0ovKv6C8zVXvWrVrPoN
50c2yL5I2/0Hzi99aB64UfwfnL80ppTnYcx/OP8wdyLDdV8GBxh/ld7vv4d/
Ifiz7y1bojyHEc5nCjl2jtObCc53ysyduu8bgt/Drcb6bBoznO9THPRjsgsL
nC+WMWHKlmcI/o4/oWcXt7LC+RfD+jsljdjg/M+2t94xXkbwe17NuF7QyA7n
66tkZgapcCDc//fAdKYjCP6cOT2eloWccP70E5lLHglxwfmcu3Y1CR1C8EO8
J/8VyOOG81dk1io28fHA+cW+t09U7kHw3fd5ST6J44Xzv5xzZJP9h+CLL11T
dmcVH5zvwqE5gc+HH85XahHxYF+G4EMyi4ADAHzRf5o=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.06283185307179587, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 3.141592653589793}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6792740398818192`*^9, 3.679274334983103*^9, 3.679274379245409*^9, {
   3.679274438301649*^9, 3.6792744798388476`*^9}, {3.6792745325997286`*^9, 
   3.6792745386948776`*^9}, {3.679274582009799*^9, 3.679274640316839*^9}, 
   3.679275004227605*^9, 3.679275036303549*^9, 3.6792750884722395`*^9, {
   3.6792751541695385`*^9, 3.679275214537876*^9}, {3.679275302264099*^9, 
   3.679275349812029*^9}, 3.679275388694639*^9, {3.6792754304132357`*^9, 
   3.679275461107685*^9}, {3.679275531034054*^9, 3.6792756343115377`*^9}, {
   3.6792756834828577`*^9, 3.679275700901455*^9}, {3.6792758095716286`*^9, 
   3.6792758266688633`*^9}, {3.6792759076709957`*^9, 3.679275912728685*^9}, {
   3.6792759429242315`*^9, 3.679275965908941*^9}, 3.6792759963041325`*^9, {
   3.6792760306656666`*^9, 3.679276039818206*^9}, {3.6792760775513086`*^9, 
   3.6792760994116516`*^9}, {3.679276134463832*^9, 3.679276140839149*^9}, 
   3.6792761907425823`*^9, {3.67927623724842*^9, 3.67927628022223*^9}, 
   3.6792763916721277`*^9, {3.6792850492403555`*^9, 3.679285052820383*^9}}]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 13319, 334, 1077, "Input"],
Cell[CellGroupData[{
Cell[13924, 360, 1112, 17, 24, "Print"],
Cell[15039, 379, 1136, 18, 24, "Print"],
Cell[16178, 399, 1409, 24, 24, "Print"],
Cell[17590, 425, 1393, 23, 24, "Print"]
}, Open  ]],
Cell[18998, 451, 15349, 476, 504, "Output"],
Cell[34350, 929, 973, 13, 33, "Output"]
}, Open  ]],
Cell[35338, 945, 2045, 50, 133, "Input"],
Cell[CellGroupData[{
Cell[37408, 999, 3428, 71, 233, "Input"],
Cell[40839, 1072, 1611, 24, 33, "Output"],
Cell[42453, 1098, 1431, 19, 33, "Output"],
Cell[43887, 1119, 4663, 112, 268, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48587, 1236, 2986, 74, 216, "Input"],
Cell[51576, 1312, 70946, 1184, 342, 1889, 54, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[122537, 2499, 1642, 41, 133, "Input"],
Cell[CellGroupData[{
Cell[124204, 2544, 4468, 109, 394, "Input"],
Cell[128675, 2655, 1117, 15, 33, "Output"],
Cell[129795, 2672, 4314, 74, 301, "Output"]
}, Open  ]]
}
]
*)

